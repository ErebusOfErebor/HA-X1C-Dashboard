  - title: 3D Printer
    path: 3d-printer
    icon: phu:bambulab-alt
    cards: []
    type: sections
    max_columns: 3
    sections:
      - type: grid
        cards:
          - type: picture-elements
            camera_image: camera.bambu_x1c_camera
            camera_view: live
            card_mod:
              style: |
                ha-card {
                  border: none;
                }
            elements:
              - type: custom:hui-element
                card_type: horizontal-stack
                style:
                  top: 52%
                  left: 49%
                  width: 100%
                  height: 100%
                  display: flex
                  justify-content: flex-end
                cards:
                  - type: custom:button-card
                    entity: sensor.x1c_3d_printer_nozzle_temperature
                    show_name: false
                    show_state: false
                    icon: |
                      [[[
                        return variables.is_heating_up ? 'mdi:printer-3d-nozzle-heat' : 'mdi:printer-3d-nozzle'
                      ]]]
                    tap_action:
                      action: navigate
                      navigation_path: '#temperature-nozzle'
                    variables:
                      target_temp: |
                        [[[
                          let target = states['sensor.x1c_3d_printer_nozzle_target_temperature'].state
                          return (target ? `<span>${target}</span><span style="font-size: 8px;"> 째C</span>` : '')
                        ]]]
                      is_heating_up: |
                        [[[
                          return states['sensor.x1c_3d_printer_nozzle_is_heating_up'].state === 'true'
                        ]]]
                      is_cooling_down: |
                        [[[
                          return states['sensor.x1c_3d_printer_nozzle_is_cooling_down'].state === 'true'
                        ]]]
                    custom_fields:
                      target: '[[[ return variables.target_temp ]]]'
                      target_icon: |
                        [[[
                          return '<ha-icon icon="mdi:target" style="width: 10px;"></ha-icon>'
                        ]]]
                      temp: |
                        [[[
                          return entity.state === 'unavailable' ? 'Off' : `<span>${entity.state}</span><span style="font-size: 10px;"> 째C</span>`
                        ]]]
                    styles:
                      card:
                        - width: 75px
                        - height: 35px
                        - border-top-left-radius: 24px
                        - border-bottom-left-radius: 24px
                        - border-top-right-radius: 24px
                        - border-bottom-right-radius: 24px
                        - transition: background-color 1.5s ease, color 1.5s ease
                        - background-color: |
                            [[[
                              if (variables.is_heating_up) {
                                return 'rgb(88, 33, 41)'
                              } else if (variables.is_cooling_down) {
                                return 'rgb(24, 34, 54)'
                              } else {
                                return 'rgb(28, 28, 28)'
                              }
                            ]]]
                        - color: |
                            [[[
                              if (variables.is_heating_up) {
                                return 'rgb(208, 66, 93)'
                              } else if (variables.is_cooling_down) {
                                return 'rgb(77, 113, 206)'
                              } else {
                                return 'grey'
                              }
                            ]]]
                      grid:
                        - grid-template-areas: |
                            [[[
                              if (variables.is_heating_up || variables.is_cooling_down) {
                                return '"i i temp temp" "i i target_icon target"'
                              } else {
                                return '"i temp" "i temp"'
                              }
                            ]]]
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                      img_cell:
                        - align-self: center
                        - text-align: center
                        - margin-left: 7.5px
                      name:
                        - justify-self: center
                        - font-size: 12px
                      icon:
                        - width: 80%
                        - transition: color 1.5s ease
                        - color: |
                            [[[
                              if (variables.is_heating_up) {
                                return 'rgb(208, 66, 93)'
                              } else if (variables.is_cooling_down) {
                                return 'rgb(77, 113, 206)'
                              } else {
                                return 'grey'
                              }
                            ]]]
                      state:
                        - justify-self: center
                        - font-size: 12px
                      custom_fields:
                        target:
                          - justify-self: left
                          - font-size: 10px
                          - display: |
                              [[[
                                return (variables.is_heating_up || variables.is_cooling_down) ? '' : 'none';
                              ]]]
                        target_icon:
                          - display: |
                              [[[
                                return (variables.is_heating_up || variables.is_cooling_down) ? '' : 'none';
                              ]]]
                  - type: custom:button-card
                    entity: sensor.x1c_3d_printer_bed_temperature
                    show_name: false
                    show_state: false
                    icon: mdi:radiator
                    tap_action:
                      action: navigate
                      navigation_path: '#temperature-bed'
                    variables:
                      target_temp: |
                        [[[
                          let target = states['sensor.x1c_3d_printer_bed_target_temperature'].state
                          return (target ? `<span>${target}</span><span style="font-size: 8px;"> 째C</span>` : '')
                        ]]]
                      is_heating_up: |
                        [[[
                          return states['sensor.x1c_3d_printer_bed_is_heating_up'].state === 'true'
                        ]]]
                      is_cooling_down: |
                        [[[
                          return states['sensor.x1c_3d_printer_bed_is_cooling_down'].state === 'true'
                        ]]]
                    custom_fields:
                      target: '[[[ return variables.target_temp ]]]'
                      target_icon: |
                        [[[
                          return '<ha-icon icon="mdi:target" style="width: 10px;"></ha-icon>'
                        ]]]
                      temp: |
                        [[[
                          return entity.state === 'unavailable' ? 'Off' : `<span>${entity.state}</span><span style="font-size: 10px;"> 째C</span>`
                        ]]]
                    styles:
                      card:
                        - width: 75px
                        - height: 35px
                        - border-top-left-radius: 24px
                        - border-bottom-left-radius: 24px
                        - border-top-right-radius: 24px
                        - border-bottom-right-radius: 24px
                        - transition: background-color 1.5s ease, color 1.5s ease
                        - background-color: |
                            [[[
                              if (variables.is_heating_up) {
                                return 'rgb(88, 33, 41)'
                              } else if (variables.is_cooling_down) {
                                return 'rgb(24, 34, 54)'
                              } else {
                                return 'rgb(28, 28, 28)'
                              }
                            ]]]
                        - color: |
                            [[[
                              if (variables.is_heating_up) {
                                return 'rgb(208, 66, 93)'
                              } else if (variables.is_cooling_down) {
                                return 'rgb(77, 113, 206)'
                              } else {
                                return 'grey'
                              }
                            ]]]
                      grid:
                        - grid-template-areas: |
                            [[[
                              if (variables.is_heating_up || variables.is_cooling_down) {
                                return '"i i temp temp" "i i target_icon target"'
                              } else {
                                return '"i temp" "i temp"'
                              }
                            ]]]
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                      img_cell:
                        - align-self: center
                        - text-align: center
                        - margin-left: 7.5px
                      name:
                        - justify-self: center
                        - font-size: 12px
                      icon:
                        - width: 80%
                        - transition: color 1.5s ease
                        - color: |
                            [[[
                              if (variables.is_heating_up) {
                                return 'rgb(208, 66, 93)'
                              } else if (variables.is_cooling_down) {
                                return 'rgb(77, 113, 206)'
                              } else {
                                return 'grey'
                              }
                            ]]]
                      state:
                        - justify-self: center
                        - font-size: 12px
                      custom_fields:
                        target:
                          - justify-self: left
                          - font-size: 10px
                          - display: |
                              [[[
                                return (variables.is_heating_up || variables.is_cooling_down) ? '' : 'none';
                              ]]]
                        target_icon:
                          - display: |
                              [[[
                                return (variables.is_heating_up || variables.is_cooling_down) ? '' : 'none';
                              ]]]
                  - type: custom:button-card
                    entity: sensor.x1c_3d_printer_chamber_temperature
                    show_name: false
                    show_state: false
                    icon: mdi:alpha-c-box-outline
                    tap_action:
                      action: none
                    variables:
                      target_temp: |
                        [[[
                          let target = states['sensor.x1c_3d_printer_nozzle_target_temperature'].state
                          return (target ? `<span>${target}</span><span style="font-size: 8px;"> 째C</span>` : '')
                        ]]]
                      is_heating_up: |
                        [[[
                          return states['sensor.x1c_3d_printer_chamber_is_heating_up'].state === 'true'
                        ]]]
                      is_cooling_down: |
                        [[[
                          return states['sensor.x1c_3d_printer_chamber_is_cooling_down'].state === 'true'
                        ]]]
                    custom_fields:
                      target: '[[[ return variables.target_temp ]]]'
                      target_icon: |
                        [[[
                          return '<ha-icon icon="mdi:target" style="width: 10px;"></ha-icon>'
                        ]]]
                      temp: |
                        [[[
                          return entity.state === 'unavailable' ? 'Off' : `<span>${entity.state}</span><span style="font-size: 10px;"> 째C</span>`
                        ]]]
                    styles:
                      card:
                        - width: 75px
                        - height: 35px
                        - border-top-left-radius: 24px
                        - border-bottom-left-radius: 24px
                        - border-top-right-radius: 24px
                        - border-bottom-right-radius: 24px
                        - transition: background-color 1.5s ease, color 1.5s ease
                        - background-color: |
                            [[[
                              if (variables.is_heating_up) {
                                return 'rgb(88, 33, 41)'
                              } else if (variables.is_cooling_down) {
                                return 'rgb(24, 34, 54)'
                              } else {
                                return 'rgb(28, 28, 28)'
                              }
                            ]]]
                        - color: |
                            [[[
                              if (variables.is_heating_up) {
                                return 'rgb(208, 66, 93)'
                              } else if (variables.is_cooling_down) {
                                return 'rgb(77, 113, 206)'
                              } else {
                                return 'grey'
                              }
                            ]]]
                      grid:
                        - grid-template-areas: |
                            [[[
                              if (variables.is_heating_up || variables.is_cooling_down) {
                                return '"i i temp temp" "i i target_icon target"'
                              } else {
                                return '"i temp" "i temp"'
                              }
                            ]]]
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                      img_cell:
                        - align-self: center
                        - text-align: center
                        - margin-left: 7.5px
                      name:
                        - justify-self: center
                        - font-size: 12px
                      icon:
                        - width: 80%
                        - transition: color 1.5s ease
                        - color: |
                            [[[
                              if (variables.is_heating_up) {
                                return 'rgb(208, 66, 93)'
                              } else if (variables.is_cooling_down) {
                                return 'rgb(77, 113, 206)'
                              } else {
                                return 'grey'
                              }
                            ]]]
                      state:
                        - justify-self: center
                        - font-size: 12px
                      custom_fields:
                        target:
                          - justify-self: left
                          - font-size: 10px
                          - display: |
                              [[[
                                return (variables.is_heating_up || variables.is_cooling_down) ? '' : 'none';
                              ]]]
                        target_icon:
                          - display: |
                              [[[
                                return (variables.is_heating_up || variables.is_cooling_down) ? '' : 'none';
                              ]]]
          - type: vertical-stack
            cards:
              - type: custom:mushroom-chips-card
                alignment: center
                chips:
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: button.x1c_3d_printer_home
                        state_not: unavailable
                    chip:
                      type: template
                      icon: mdi:home
                      tap_action:
                        action: call-service
                        service: button.press
                        target:
                          entity_id: button.x1c_3d_printer_home
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.x1c_3d_printer_print_status
                        state: RUNNING
                    chip:
                      type: template
                      icon: mdi:pause
                      tap_action:
                        action: call-service
                        service: button.press
                        target:
                          entity_id: button.x1c_3d_printer_pause_print
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.x1c_3d_printer_print_status
                        state: PAUSE
                    chip:
                      type: template
                      icon: mdi:play
                      tap_action:
                        action: call-service
                        service: button.press
                        target:
                          entity_id: button.x1c_3d_printer_resume_print
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.x1c_3d_printer_stage
                        state: Printing
                    chip:
                      type: template
                      icon: mdi:stop
                      tap_action:
                        action: call-service
                        confirmation:
                          text: Are you sure you want to cancel this print?
                        service: button.press
                        target:
                          entity_id: button.x1c_3d_printer_stop_print
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.x1c_3d_printer_door
                        state: open
                    chip:
                      type: template
                      icon: mdi:door-open
                      tap_action:
                        action: none
                  - type: conditional
                    conditions:
                      - entity: sensor.x1c_3d_printer_extruder_loaded
                        state: 'true'
                    chip:
                      type: template
                      icon: mdi:circle
                      icon_color: '#4eab50'
                      tap_action:
                        action: none
                  - type: conditional
                    conditions:
                      - entity: sensor.x1c_3d_printer_extruder_loaded
                        state: 'false'
                    chip:
                      type: template
                      icon: mdi:circle
                      icon_color: white
                      tap_action:
                        action: none
                  - type: conditional
                    conditions:
                      - condition: numeric_state
                        entity: sensor.x1c_3d_printer_skipped_objects
                        above: 0
                    chip:
                      type: template
                      content: >
                        {{ states('sensor.x1c_3d_printer_skipped_objects') if
                        states('sensor.x1c_3d_printer_skipped_objects') !=
                        'unavailable' else 0 }}
                      icon: mdi:debug-step-over
                      icon_color: red
                      tap_action:
                        action: none
                  - type: conditional
                    conditions:
                      - entity: sensor.x1c_3d_printer_nodered_flow_status
                        state: Update Available
                    chip:
                      type: template
                      icon: mdi:arrow-up-circle
                      icon_color: purple
                      content: NodeRed Update
                      tap_action:
                        action: url
                        url_path: >-
                          https://github.com/WolfwithSword/Bambu-HomeAssistant-Flows/releases
                  - type: conditional
                    conditions:
                      - entity: sensor.x1c_3d_printer_homed
                        state_not: unknown
                      - entity: sensor.x1c_3d_printer_homed
                        state_not: unavailable
                    chip:
                      type: template
                      icon: >
                        {% set state = states('sensor.x1c_3d_printer_homed') %}
                        {% if state == 'None' %}
                          mdi:axis
                        {% elif state == 'Not Homed' %}
                          mdi:axis
                        {% elif state == 'XYZ' %}
                          mdi:axis-arrow-lock
                        {% elif state == 'X' %}
                          mdi:axis-x-arrow
                        {% elif state == 'Y' %}
                          mdi:axis-y-arrow
                        {% elif state == 'Z' %}
                          mdi:axis-z-arrow
                        {% elif state == 'XY' %}
                          mdi:axis-x-y-arrow-lock
                        {% elif state == 'XZ' %}
                          mdi:axis-arrow
                        {% elif state == 'YZ' %}
                          mdi:axis-arrow
                        {% elif state == 'unavailable' %}
                          mdi:axis
                        {% elif state == 'unknown' %}
                          mdi:axis
                        {% endif %}
                      icon_color: >
                        {% set state = states('sensor.x1c_3d_printer_homed') %}
                        {% if state == 'None' %}
                          red
                        {% elif state == 'Not Homed' %}
                          red
                        {% elif state == 'XYZ' %}
                          green
                        {% elif state == 'X' %}
                          blue
                        {% elif state == 'Y' %}
                          blue
                        {% elif state == 'Z' %}
                          blue
                        {% elif state == 'XY' %}
                          blue
                        {% elif state == 'XZ' %}
                          blue
                        {% elif state == 'YZ' %}
                          blue
                        {% elif state == 'unavailable' %}
                          red
                        {% elif state == 'unknown' %}
                          red
                        {% endif %}
                      tap_action:
                        action: none
                  - type: template
                    icon: mdi:cogs
                    icon_color: white
                    tap_action:
                      action: navigate
                      navigation_path: '#printer-info'
              - type: custom:bubble-card
                card_type: button
                button_type: state
                card_layout: large-2-rows
                name: Bambu X1C
                entity: sensor.x1c_3d_printer_subtask
                show_icon: false
                show_attribute: true
                show_state: true
                styles: >
                  ${card.querySelector('.bubble-name').innerText =
                  hass.states['sensor.x1c_3d_printer_status'].state === 'online'
                  ? hass.states['sensor.x1c_3d_printer_subtask'].state : 'Bambu
                  X1C'}

                  ${card.querySelector('.bubble-state').innerText =
                  hass.states['sensor.x1c_3d_printer_ams_status'].state === 'AMS
                  Filament Change' ? 'Changing Filament' : ''}

                  ${card.querySelector('.bubble-sub-button-3
                  .bubble-sub-button-name-container').innerText =
                  hass.states['sensor.x1c_3d_printer_status'].state === 'online'
                  ? hass.states['sensor.x1c_3d_printer_layer_num'].state + " / "
                  + hass.states['sensor.x1c_3d_printer_total_layer_num'].state :
                  'Off'}

                  .bubble-sub-button-4 {
                    display: ${hass.states['sensor.x1c_3d_printer_stage'] === 'Idle' ? 'none' : ''} !important;
                  }
                button_action:
                  tap_action:
                    action: none
                sub_button:
                  - entity: sensor.x1c_3d_printer_print_progress
                    icon: mdi:progress-clock
                    show_background: false
                    show_state: true
                  - entity: sensor.x1c_3d_printer_stage
                    show_background: false
                    show_state: true
                  - entity: sensor.x1c_3d_printer_layer_num
                    icon: mdi:layers
                    show_state: true
                    show_background: false
                  - entity: sensor.x1c_3d_printer_print_remaining_time
                    icon: mdi:clock-end
                    show_state: false
                    show_background: false
                    tap_action:
                      action: call-service
                      service: input_boolean.toggle
                      target:
                        entity_id: input_boolean.3d_printer_end_time_switch
                card_mod:
                  style: >
                    {% set progress =
                    states('sensor.x1c_3d_printer_print_progress') | float / 100
                    %}

                    {% set pct_diff = 1.0 - progress %} {% set r = min(255,
                    pct_diff * 2 * 255) | round(0) %} {% set g = min(255,
                    progress * 2 * 255) | round(0) %} {% set font_color = (r, g,
                    0, 1) %} {% set bg_color = (r, g, 0, 0.4) %}

                    .bubble-button-background::before {
                      content: "";
                      height: 75px;
                      width: {{ progress * 100 }}%;
                      background-color: rgba{{ bg_color }};
                    }

                    {% set toggle_state =
                    states('input_boolean.3d_printer_end_time_switch') %}

                    {% set end_time =
                    states('sensor.x1c_3d_printer_print_end_time') |as_timestamp
                    %}

                    {% set time_to_end =
                    states('sensor.x1c_3d_printer_print_remaining_time') | int
                    %}

                    {% set hours = (time_to_end / 60) | int %}

                    {% set minutes = (time_to_end % 60) %}

                    .bubble-sub-button-4::before {
                      {% if toggle_state == 'on' %}
                        {% if end_time | timestamp_custom('%Y-%m-%d') == now().date() | string %}
                          content: "{{ end_time | timestamp_custom('%H:%M') }}";
                        {% else %}
                          content: "{{ end_time | timestamp_custom('%m/%d %H:%M') }}";
                        {% endif %}
                      {% else %}
                        content: "{{ '{:01}h {:01}m'.format(hours, minutes) }}";
                      {% endif %}
                      margin-left: 3px;
                    }
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-template-columns: 1fr 1fr 1fr spacer 1fr spacer2 1fr
              grid-template-rows: auto
              grid-template-areas: |
                "part aux cham spacer1 speed spacer2 light"
            cards:
              - type: custom:button-card
                entity: fan.x1c_3d_printer_cooling_fan
                view_layout:
                  grid-area: part
                name: Part
                show_state: false
                show_attribute: true
                attribute: percentage
                show_label: true
                icon: mdi:fan
                tap_action:
                  action: navigate
                  navigation_path: '#fans-part'
                state:
                  - value: 'on'
                    color: rgb(78, 171, 80)
                    styles:
                      icon:
                        - animation: |
                            [[[
                              return 'fan-on ' + (11 - (entity.attributes.percentage / 10)) + 's linear infinite';
                            ]]]
                        - transition: animation-duration 1s ease-in-out
                  - value: 'off'
                    color: grey
                custom_fields:
                  speed: |
                    [[[
                      let speed = entity.attributes.percentage;
                      return speed ? speed + '%' : 'Off';
                    ]]]
                styles:
                  card:
                    - width: 50px
                    - height: 50px
                    - border-radius: 50%
                    - background-color: rgb(40,40,40)
                  grid:
                    - grid-template-areas: '"n" "i" "speed"'
                    - grid-template-columns: 1fr
                    - grid-template-rows: 1fr 3fr 1fr
                  img_cell:
                    - align-self: center
                    - text-align: start
                  name:
                    - justify-self: center
                    - font-size: 12px
                    - color: grey
                    - padding-top: 10px
                  icon:
                    - position: absolute
                    - top: 0
                    - left: 0
                    - width: 100%
                    - height: 100%
                    - z-index: 1
                    - opacity: 0.3
                  custom_fields:
                    speed:
                      - justify-self: center
                      - font-size: 12px
                      - color: grey
                      - padding-bottom: 10px
                extra_styles: |
                  @keyframes fan-on {
                      from { transform: rotate(0deg); }
                      to { transform: rotate(360deg); }
                  }

                  ha-card:hover {
                    border-color: rgb(78, 171, 80);
                  }
              - type: custom:button-card
                entity: fan.x1c_3d_printer_big_fan1
                view_layout:
                  grid-area: aux
                name: Aux
                show_state: false
                show_attribute: true
                attribute: percentage
                show_label: true
                icon: mdi:fan
                tap_action:
                  action: navigate
                  navigation_path: '#fans-aux'
                state:
                  - value: 'on'
                    color: rgb(78, 171, 80)
                    styles:
                      icon:
                        - animation: |
                            [[[
                              return 'fan-on ' + (11 - (entity.attributes.percentage / 10)) + 's linear infinite';
                            ]]]
                        - transition: animation-duration 1s ease-in-out
                  - value: 'off'
                    color: grey
                custom_fields:
                  speed: |
                    [[[
                      let speed = entity.attributes.percentage;
                      return speed ? speed + '%' : 'Off';
                    ]]]
                styles:
                  card:
                    - width: 50px
                    - height: 50px
                    - border-radius: 50%
                    - background-color: rgb(40,40,40)
                  grid:
                    - grid-template-areas: '"n" "i" "speed"'
                    - grid-template-columns: 1fr
                    - grid-template-rows: 1fr 3fr 1fr
                  img_cell:
                    - align-self: center
                    - text-align: start
                  name:
                    - justify-self: center
                    - font-size: 12px
                    - color: grey
                    - padding-top: 10px
                  icon:
                    - position: absolute
                    - top: 0
                    - left: 0
                    - width: 100%
                    - height: 100%
                    - z-index: 1
                    - opacity: 0.3
                  custom_fields:
                    speed:
                      - justify-self: center
                      - font-size: 12px
                      - color: grey
                      - padding-bottom: 10px
                extra_styles: |
                  @keyframes fan-on {
                      from { transform: rotate(0deg); }
                      to { transform: rotate(360deg); }
                  }

                  ha-card:hover {
                    border-color: rgb(78, 171, 80);
                  }
              - type: custom:button-card
                entity: fan.x1c_3d_printer_big_fan2
                view_layout:
                  grid-area: cham
                name: Cham
                show_state: false
                show_attribute: true
                attribute: percentage
                show_label: true
                icon: mdi:fan
                tap_action:
                  action: navigate
                  navigation_path: '#fans-chamber'
                state:
                  - value: 'on'
                    color: rgb(78, 171, 80)
                    styles:
                      icon:
                        - animation: |
                            [[[
                              return 'fan-on ' + (11 - (entity.attributes.percentage / 10)) + 's linear infinite';
                            ]]]
                        - transition: animation-duration 1s ease-in-out
                  - value: 'off'
                    color: grey
                custom_fields:
                  speed: |
                    [[[
                      let speed = entity.attributes.percentage;
                      return speed ? speed + '%' : 'Off';
                    ]]]
                styles:
                  card:
                    - width: 50px
                    - height: 50px
                    - border-radius: 50%
                    - background-color: rgb(40,40,40)
                  grid:
                    - grid-template-areas: '"n" "i" "speed"'
                    - grid-template-columns: 1fr
                    - grid-template-rows: 1fr 3fr 1fr
                  img_cell:
                    - align-self: center
                    - text-align: start
                  name:
                    - justify-self: center
                    - font-size: 12px
                    - color: grey
                    - padding-top: 10px
                  icon:
                    - position: absolute
                    - top: 0
                    - left: 0
                    - width: 100%
                    - height: 100%
                    - z-index: 1
                    - opacity: 0.3
                  custom_fields:
                    speed:
                      - justify-self: center
                      - font-size: 12px
                      - color: grey
                      - padding-bottom: 10px
                extra_styles: |
                  @keyframes fan-on {
                      from { transform: rotate(0deg); }
                      to { transform: rotate(360deg); }
                  }

                  ha-card:hover {
                    border-color: rgb(78, 171, 80);
                  }
              - type: custom:button-card
                entity: sensor.x1c_3d_printer_speed
                view_layout:
                  grid-area: speed
                name: Speed
                show_state: false
                tap_action:
                  action: navigate
                  navigation_path: '#settings-speed'
                state:
                  - value: Silent
                    color: '#3498db'
                    icon: mdi:gauge-empty
                  - value: Standard
                    color: '#4eab50'
                    icon: mdi:gauge-low
                  - value: Sport
                    color: '#f1c40f'
                    icon: mdi:gauge
                  - value: Ludicrous
                    color: '#e74c3c'
                    icon: mdi:gauge-full
                  - value: unavailable
                    icon: mdi:gauge-empty
                custom_fields:
                  speed: |
                    [[[
                      return entity.state === 'unavailable' ? 'Off' : entity.state;
                    ]]]
                styles:
                  card:
                    - width: 100px
                    - height: 50px
                    - border-radius: 24px
                    - background-color: rgb(40,40,40)
                  grid:
                    - grid-template-areas: '"i n" "i speed"'
                    - grid-template-columns: auto
                    - grid-template-rows: auto
                  img_cell:
                    - align-self: center
                    - text-align: start
                    - margin-left: 7.5px
                  name:
                    - justify-self: center
                    - font-size: 12px
                    - color: grey
                  icon:
                    - width: 100%
                    - height: 100%
                    - opacity: 0.3
                  custom_fields:
                    speed:
                      - justify-self: center
                      - font-size: 12px
                      - color: grey
                extra_styles: |
                  ha-card:hover {
                    border-color: rgb(78, 171, 80);
                  }
              - type: custom:button-card
                entity: light.x1c_3d_printer_chamber_light
                view_layout:
                  grid-area: light
                name: Light
                show_state: false
                icon: mdi:lightbulb
                tap_action:
                  action: call-service
                  service: light.toggle
                  target:
                    entity_id: light.x1c_3d_printer_chamber_light
                state:
                  - value: 'off'
                    color: grey
                  - value: 'on'
                    color: rgb(255, 220, 200)
                styles:
                  card:
                    - width: 100px
                    - height: 50px
                    - border-top-left-radius: 24px
                    - border-bottom-left-radius: 24px
                    - border-top-right-radius: 24px
                    - border-bottom-right-radius: 24px
                    - background-color: |
                        [[[
                          let state = entity.state;
                          if (state === 'on') {
                            return 'rgba(255, 220, 200, .6)';
                          } else {
                            return 'rgb(40,40,40)'
                          }
                        ]]]
                    - transition: background-color 1.5s
                  grid:
                    - grid-template-areas: '"i n"'
                    - grid-template-columns: auto
                    - grid-template-rows: auto
                  img_cell:
                    - align-self: center
                    - text-align: start
                    - margin-left: 7.5px
                    - background-color: var(--card-background-color, var(--ha-card-background))
                    - opacity: |
                        [[[
                          let state = entity.state;
                          if (state === 'on') {
                            return '0.8';
                          } else {
                            return '1'
                          }
                        ]]]
                    - border-radius: 50%
                  name:
                    - justify-self: center
                    - font-size: 12px
                    - color: white
                    - font-weight: bold
                    - opacity: 1
                  icon:
                    - width: 75%
                    - height: 75%
                    - opacity: 1
                    - filter: brightness(1.1)
          - type: custom:button-card
            name: HMS
            show_name: false
            show_state: false
            show_attribute: false
            show_label: false
            show_icon: false
            tap_action:
              action: navigate
              navigation_path: '#hms'
            custom_fields:
              unknown: |
                [[[
                  let val = states['sensor.x1c_3d_printer_hms_unknown'].state;
                  
                  return `<div style="display: flex; align-items: center; line-height: 1; margin: 2px;">
                    <ha-icon icon="mdi:help" style="height: 18px; width: 18px; color: #A9A9A9;"></ha-icon>
                    <span>${val === 'unavailable' ? 0 : val}</span>
                  </div>`
                ]]]
              common: |
                [[[
                  let val = states['sensor.x1c_3d_printer_hms_common'].state
                  
                  return `<div style="display: flex; align-items: center; line-height: 1; margin: 2px;">
                    <ha-icon icon="mdi:clipboard-text-outline" style="height: 18px; width: 18px; color: #4CAF50;"></ha-icon>
                    <span style="margin-left: 3px;">${val === 'unavailable' ? 0 : val}</span>
                  </div>`
                ]]]
              info: |
                [[[
                  let val = states['sensor.x1c_3d_printer_hms_info'].state
                  
                  return `<div style="display: flex; align-items: center; line-height: 1; margin: 2px;">
                    <ha-icon icon="mdi:information-outline" style="height: 18px; width: 18px; color: #2196F3;"></ha-icon>
                    <span style="margin-left: 3px;">${val === 'unavailable' ? 0 : val}</span>
                  </div>`
                ]]]
              serious: |
                [[[
                  let val = states['sensor.x1c_3d_printer_hms_serious'].state
                  
                  return `<div style="display: flex; align-items: center; line-height: 1; margin: 2px;">
                    <ha-icon icon="mdi:alert" style="height: 18px; width: 18px; color: #FFEB3B;"></ha-icon>
                    <span style="margin-left: 3px;">${val === 'unavailable' ? 0 : val}</span>
                  </div>`
                ]]]
              fatal: |
                [[[
                  let val = states['sensor.x1c_3d_printer_hms_fatal'].state
                  
                  return `<div style="display: flex; align-items: center; line-height: 1; margin: 2px;">
                    <ha-icon icon="mdi:skull" style="height: 18px; width: 18px; color: #F44336;"></ha-icon>
                    <span style="margin-left: 3px;">${val === 'unavailable' ? 0 : val}</span>
                  </div>`
                ]]]
                        
            styles:
              card:
                - border-radius: 24px
                - background-color: rgb(40,40,40)
                - padding-bottom: 5px
                - padding-top: 5px
              grid:
                - grid-template-areas: '"unknown common info serious fatal"'
                - grid-template-columns: auto
              name:
                - position: absolute
                - left: 50%
                - top: 50%
                - justify-self: center
                - font-size: 18px
                - color: grey
                - padding-left: 10px
              custom_fields:
                unknown:
                  - margin: 2px
                  - overflow: visible
                  - justify-self: center
                  - background-color: var(--card-background-color)
                  - border-radius: 24px
                  - padding: 5px 10px 5px 10px
                common:
                  - margin: 2px
                  - overflow: visible
                  - justify-self: center
                  - background-color: var(--card-background-color)
                  - border-radius: 24px
                  - padding: 5px 10px 5px 10px
                info:
                  - margin: 2px
                  - overflow: visible
                  - justify-self: center
                  - background-color: var(--card-background-color)
                  - border-radius: 24px
                  - padding: 5px 10px 5px 10px
                serious:
                  - margin: 2px
                  - overflow: visible
                  - justify-self: center
                  - background-color: var(--card-background-color)
                  - border-radius: 24px
                  - padding: 5px 10px 5px 10px
                fatal:
                  - margin: 2px
                  - overflow: visible
                  - justify-self: center
                  - background-color: var(--card-background-color)
                  - border-radius: 24px
                  - padding: 5px 10px 5px 10px
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#hms'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 10vh
              - type: custom:mushroom-title-card
                title: Health Management System
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.x1c_3d_printer_hms_unknown
                    above: 0
                card:
                  type: custom:button-card
                  name: Unknown
                  show_state: false
                  show_label: true
                  icon: mdi:help-circle-outline
                  variables:
                    info: |
                      [[[ 
                          let attrs = states['sensor.x1c_3d_printer_hms_unknown'].attributes;
                          let skip_attrs = ['friendly_name', 'icon']
                          let results = {
                            'id': '',
                            'url': '',
                            'module': '',
                            'description': ''
                          };
                          
                          
                          for (let [key, value] of Object.entries(attrs)) {
                            if (skip_attrs.includes(key)) { continue; }

                            let x = key.split(' ');
                            let attr_code = x[0];
                            let attr_key = x[1];

                            results['id'] = attr_code;
                            if (typeof attr_key === 'undefined') { results['url'] = value; }
                            if (attr_key === 'Module') { results['module'] = value; }
                            if (attr_key === 'Description') { results['description'] = value; }
                            
                          }
                          return JSON.stringify(results);
                      ]]]
                    value_font_color: grey
                  custom_fields:
                    id: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">ID</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['id']}</span>
                          </div>
                        `;
                      ]]]
                    module: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">Module</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['module']}</span>
                          </div>
                        `;
                      ]]]
                    description: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">Description</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['description']}</span>
                          </div>
                        `;
                      ]]]
                    wiki_url: |
                      [[[
                        console.log(JSON.parse(variables.info)['url']);
                        return JSON.parse(variables.info)['url']
                      ]]]
                  styles:
                    card:
                      - background-color: rgb(40,40,40)
                      - padding-left: 10px
                      - padding-right: 10px
                    grid:
                      - grid-template-areas: |
                          "i n"
                          "id id"
                          "module module"
                          "description description"
                      - grid-template-columns: auto 1fr
                      - grid-template-rows: auto
                      - text-align: start
                      - gap: 5px
                    name:
                      - justify-self: left
                      - align-self: flex-start
                      - font-size: 2rem
                      - color: grey
                    icon:
                      - width: 25px
                      - justify-self: left
                      - color: grey
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.x1c_3d_printer_hms_common
                    above: 0
                card:
                  type: custom:button-card
                  name: Common
                  show_state: false
                  show_label: true
                  icon: mdi:clipboard-text-outline
                  variables:
                    info: |
                      [[[ 
                          let attrs = states['sensor.x1c_3d_printer_hms_common'].attributes;
                          let skip_attrs = ['friendly_name', 'icon']
                          let results = {
                            'id': '',
                            'url': '',
                            'module': '',
                            'description': ''
                          };
                          
                          
                          for (let [key, value] of Object.entries(attrs)) {
                            if (skip_attrs.includes(key)) { continue; }

                            let x = key.split(' ');
                            let attr_code = x[0];
                            let attr_key = x[1];

                            results['id'] = attr_code;
                            if (typeof attr_key === 'undefined') { results['url'] = value; }
                            if (attr_key === 'Module') { results['module'] = value; }
                            if (attr_key === 'Description') { results['description'] = value; }
                            
                          }
                          return JSON.stringify(results);
                      ]]]
                    value_font_color: grey
                  custom_fields:
                    id: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">ID</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['id']}</span>
                          </div>
                        `;
                      ]]]
                    module: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">Module</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['module']}</span>
                          </div>
                        `;
                      ]]]
                    description: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">Description</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['description']}</span>
                          </div>
                        `;
                      ]]]
                  tap_action:
                    action: none
                  styles:
                    card:
                      - background-color: rgb(40,40,40)
                      - padding-left: 10px
                      - padding-right: 10px
                    grid:
                      - grid-template-areas: |
                          "i n"
                          "id id"
                          "module module"
                          "description description"
                      - grid-template-columns: auto 1fr
                      - grid-template-rows: auto
                      - text-align: start
                      - gap: 5px
                    name:
                      - justify-self: left
                      - align-self: flex-start
                      - font-size: 2rem
                      - color: grey
                    icon:
                      - width: 25px
                      - justify-self: left
                      - color: '#4CAF50'
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.x1c_3d_printer_hms_info
                    above: 0
                card:
                  type: custom:button-card
                  name: Info
                  show_state: false
                  show_label: true
                  icon: mdi:information-outline
                  variables:
                    info: |
                      [[[ 
                          let attrs = states['sensor.x1c_3d_printer_hms_info'].attributes;
                          let skip_attrs = ['friendly_name', 'icon']
                          let results = {
                            'id': '',
                            'url': '',
                            'module': '',
                            'description': ''
                          };
                          
                          
                          for (let [key, value] of Object.entries(attrs)) {
                            if (skip_attrs.includes(key)) { continue; }

                            let x = key.split(' ');
                            let attr_code = x[0];
                            let attr_key = x[1];

                            results['id'] = attr_code;
                            if (typeof attr_key === 'undefined') { results['url'] = value; }
                            if (attr_key === 'Module') { results['module'] = value; }
                            if (attr_key === 'Description') { results['description'] = value; }
                            
                          }
                          return JSON.stringify(results);
                      ]]]
                    value_font_color: grey
                  custom_fields:
                    id: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">ID</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['id']}</span>
                          </div>
                        `;
                      ]]]
                    module: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">Module</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['module']}</span>
                          </div>
                        `;
                      ]]]
                    description: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">Description</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['description']}</span>
                          </div>
                        `;
                      ]]]
                  tap_action:
                    action: none
                  styles:
                    card:
                      - background-color: rgb(40,40,40)
                      - padding-left: 10px
                      - padding-right: 10px
                    grid:
                      - grid-template-areas: |
                          "i n"
                          "id id"
                          "module module"
                          "description description"
                      - grid-template-columns: auto 1fr
                      - grid-template-rows: auto
                      - text-align: start
                      - gap: 5px
                    name:
                      - justify-self: left
                      - align-self: flex-start
                      - font-size: 2rem
                      - color: grey
                    icon:
                      - width: 25px
                      - justify-self: left
                      - color: '#2196F3'
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.x1c_3d_printer_hms_serious
                    above: 0
                card:
                  type: custom:button-card
                  name: Serious
                  show_state: false
                  show_label: true
                  icon: mdi:alert
                  variables:
                    info: |
                      [[[ 
                          let attrs = states['sensor.x1c_3d_printer_hms_serious'].attributes;
                          let skip_attrs = ['friendly_name', 'icon']
                          let results = {
                            'id': '',
                            'url': '',
                            'module': '',
                            'description': ''
                          };
                          
                          
                          for (let [key, value] of Object.entries(attrs)) {
                            if (skip_attrs.includes(key)) { continue; }

                            let x = key.split(' ');
                            let attr_code = x[0];
                            let attr_key = x[1];

                            results['id'] = attr_code;
                            if (typeof attr_key === 'undefined') { results['url'] = value; }
                            if (attr_key === 'Module') { results['module'] = value; }
                            if (attr_key === 'Description') { results['description'] = value; }
                            
                          }
                          return JSON.stringify(results);
                      ]]]
                    value_font_color: grey
                  custom_fields:
                    id: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">ID</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['id']}</span>
                          </div>
                        `;
                      ]]]
                    module: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">Module</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['module']}</span>
                          </div>
                        `;
                      ]]]
                    description: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">Description</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['description']}</span>
                          </div>
                        `;
                      ]]]
                  tap_action:
                    action: none
                    target:
                      entity_id: sensor.x1c_3d_printer_hms_serious
                  styles:
                    card:
                      - background-color: rgb(40,40,40)
                      - padding-left: 10px
                      - padding-right: 10px
                    grid:
                      - grid-template-areas: |
                          "i n"
                          "id id"
                          "module module"
                          "description description"
                      - grid-template-columns: auto 1fr
                      - grid-template-rows: auto
                      - text-align: start
                      - gap: 5px
                    name:
                      - justify-self: left
                      - align-self: flex-start
                      - font-size: 2rem
                      - color: grey
                    icon:
                      - width: 25px
                      - justify-self: left
                      - color: '#FFEB3B'
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.x1c_3d_printer_hms_fatal
                    above: 0
                card:
                  type: custom:button-card
                  name: Fatal
                  show_state: false
                  show_label: true
                  icon: mdi:skull
                  variables:
                    info: |
                      [[[ 
                          let attrs = states['sensor.x1c_3d_printer_hms_fatal'].attributes;
                          let skip_attrs = ['friendly_name', 'icon']
                          let results = {
                            'id': '',
                            'url': '',
                            'module': '',
                            'description': ''
                          };
                          
                          
                          for (let [key, value] of Object.entries(attrs)) {
                            if (skip_attrs.includes(key)) { continue; }

                            let x = key.split(' ');
                            let attr_code = x[0];
                            let attr_key = x[1];

                            results['id'] = attr_code;
                            if (typeof attr_key === 'undefined') { results['url'] = value; }
                            if (attr_key === 'Module') { results['module'] = value; }
                            if (attr_key === 'Description') { results['description'] = value; }
                            
                          }
                          return JSON.stringify(results);
                      ]]]
                    value_font_color: grey
                  custom_fields:
                    id: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">ID</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['id']}</span>
                          </div>
                        `;
                      ]]]
                    module: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">Module</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['module']}</span>
                          </div>
                        `;
                      ]]]
                    description: |
                      [[[
                        return `
                          <div style="font-size: 12px; width: 100%; display: grid; grid-template-columns: 1fr 5fr; align-items: start; gap: 25px;">
                            <span style="text-align: left; white-space: nowrap">Description</span>
                            <span style="white-space: normal; color: ${variables.value_font_color}">${JSON.parse(variables.info)['description']}</span>
                          </div>
                        `;
                      ]]]
                  tap_action:
                    action: none
                  styles:
                    card:
                      - background-color: rgb(40,40,40)
                      - padding-left: 10px
                      - padding-right: 10px
                    grid:
                      - grid-template-areas: |
                          "i n"
                          "id id"
                          "module module"
                          "description description"
                      - grid-template-columns: auto 1fr
                      - grid-template-rows: auto
                      - text-align: start
                      - gap: 5px
                    name:
                      - justify-self: left
                      - align-self: flex-start
                      - font-size: 2rem
                      - color: grey
                    icon:
                      - width: 25px
                      - justify-self: left
                      - color: '#F44336'
      - type: grid
        cards:
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-template-columns: repeat(5, 1fr)
              grid-template-rows: auto
              grid-template-areas: |
                "ext ams1 ams2 ams3 ams4"
            cards:
              - type: custom:button-card
                view_layout:
                  grid-area: ext
                show_name: false
                show_state: false
                show_label: false
                icon: phu:3d-filament
                tap_action:
                  action: none
                variables:
                  tray_attributes: |
                    [[[
                      return states['sensor.x1c_3d_printer_vt_tray'].attributes
                    ]]]
                custom_fields:
                  filament: |
                    [[[
                      let color = variables.tray_attributes.color;

                      if (color === 'unavailable' || color === 'unknown') {
                        color = '#161616FF';
                      }
                      
                      return `
                        <div style="background-color: rgba(20,20,20, .5); border-radius: 50%; padding: 7.5px; aspect-ratio: 1/1; position: relative;">
                          <div style="aspect-ratio: 1/1; width: 50%; background-color: ${color}; border-radius: 50%; position: absolute; left: 25%; top: 25%">
                          </div>
                        </div>
                      `;
                    ]]]
                  ext_type: |
                    [[[
                      let type = variables.tray_attributes.type;
                      
                      if (type === 'unavailable' || type === 'unknown') {
                        type = '?';
                      }
                      
                      return type
                    ]]]
                styles:
                  card:
                    - border-radius: 24px
                    - background-color: rgb(40,40,40)
                    - padding: 10px
                    - height: 100%
                  grid:
                    - grid-template-areas: |
                        [[[
                          if (variables.tray_attributes.color) {
                            return `
                              "i ext_type"
                              "filament filament"
                            `;
                          } else {
                            return `
                              "i i"
                              "filament filament"
                            `;
                          }
                        ]]]
                    - grid-template-columns: auto
                    - grid-template-rows: auto
                    - gap: 3px
                  name:
                    - justify-self: center
                    - font-size: 12px
                    - color: grey
                    - padding-top: 10px
                  img_cell:
                    - width: 25px
                    - aspect-ratio: 1 / 1
                    - margin-right: 5px
                  icon:
                    - width: 100%
                  custom_fields:
                    ext_type:
                      - font-size: 12px
                      - color: grey
                      - align-self: center
                      - justify-self: center
              - type: conditional
                view_layout:
                  grid-area: ams1
                conditions:
                  - condition: state
                    entity: sensor.x1c_3d_printer_ams_count
                    state: '1'
                card:
                  type: custom:button-card
                  show_name: false
                  entity: |
                    [[[
                      return 'sensor.ams_0_3d_printer_humidity_level'
                    ]]]
                  show_state: false
                  show_label: false
                  show_icon: true
                  show_entity_picture: true
                  tap_action:
                    action: navigate
                    navigation_path: '#ams-1'
                  state:
                    - value: 1
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-1.svg
                    - value: 2
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-2.svg
                    - value: 3
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-3.svg
                    - value: 4
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-4.svg
                    - value: 5
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-5.svg
                    - value: unavailable
                      icon: mdi:water
                  variables:
                    low_filament_threshold: 25
                    has_secondary_temp_and_hum_sensor: true
                    filament1: |
                      [[[
                        let s = states['sensor.ams_0_3d_printer_tray_0'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                    filament2: |
                      [[[
                        let s = states['sensor.ams_0_3d_printer_tray_1'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                    filament3: |
                      [[[
                        let s = states['sensor.ams_0_3d_printer_tray_2'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                    filament4: |
                      [[[
                        let s = states['sensor.ams_0_3d_printer_tray_3'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                  custom_fields:
                    temp: |
                      [[[
                        let temp = states['sensor.x1c_ams_0_temperature_and_humidity_temperature'];
                        return temp ? Math.round(temp.state) + ' 째C' : '-';
                      ]]]
                    humidity: |
                      [[[
                        let hum = states['sensor.x1c_ams_0_temperature_and_humidity_humidity'];
                        return hum ?  Math.round(hum.state) + '%' : '-';
                      ]]]
                    ams_temp: |
                      [[[
                        let temp = states['sensor.ams_0_3d_printer_temp'];
                        return temp ? Math.round(temp.state) + ' 째C' : '-';
                      ]]]
                    filaments: |
                      [[[
                        return `
                          <div style="display: grid; grid-template-areas: 'f1 f2' 'f3 f4'; background-color: rgba(20,20,20, .3); border-radius: 50%; padding: 7.5px; aspect-ratio: 1/1; gap: 0.25em">
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament1.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament1.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament1.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament1.remain}%; background-color: ${variables.filament1.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament2.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament2.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament2.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament2.remain}%; background-color: ${variables.filament2.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament3.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament3.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament3.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament3.remain}%; background-color: ${variables.filament3.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament4.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament4.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament4.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament4.remain}%; background-color: ${variables.filament4.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                          </div>
                        `;
                      ]]]
                  styles:
                    card:
                      - border-radius: 24px
                      - background-color: rgb(40,40,40)
                      - padding: 10px
                    grid:
                      - grid-template-areas: |
                          [[[
                            if (variables.has_secondary_temp_and_hum_sensor === true) {
                              return `
                                "i temp"
                                "i humidity"
                                "filaments filaments"
                              `;
                            } else {
                              return `
                                "i ams_temp"
                                "i ams_temp"
                                "filaments filaments"
                              `;
                            }
                          ]]]
                      - grid-template-columns: auto
                      - grid-template-rows: auto
                      - gap: 3px
                    name:
                      - justify-self: center
                      - font-size: 12px
                      - color: grey
                      - padding-top: 10px
                    icon:
                      - width: 100%
                    custom_fields:
                      filaments:
                        - width: 125%
                        - justify-self: center
                      humidity:
                        - font-size: 12px
                        - color: grey
                        - align-self: start
                        - justify-self: center
                        - display: |
                            [[[
                              return variables.has_secondary_temp_and_hum_sensor === true ? '' : 'none'
                            ]]]
                      temp:
                        - font-size: 12px
                        - color: grey
                        - align-self: start
                        - justify-self: center
                        - display: |
                            [[[
                              return variables.has_secondary_temp_and_hum_sensor === true ? '' : 'none'
                            ]]]
                      ams_temp:
                        - font-size: 12px
                        - color: grey
                        - justify-self: center
                        - display: |
                            [[[
                              return variables.has_secondary_temp_and_hum_sensor === true ? 'none' : ''
                            ]]]
                  extra_styles: |
                    @keyframes pulse {
                      from {
                        box-shadow: 0 0 0 0 rgba(234, 93, 86, 0.2);
                      }
                      to {
                        box-shadow: 0 0 0 10px rgba(234, 93, 86, 0);
                      }
                    }


















                      
              - type: conditional
                view_layout:
                  grid-area: ams2
                conditions:
                  - condition: state
                    entity: sensor.x1c_3d_printer_ams_count
                    state: '2'
                card:
                  type: custom:button-card
                  show_name: false
                  entity: |
                    [[[
                      return 'sensor.ams_1_3d_printer_humidity_level'
                    ]]]
                  show_state: false
                  show_label: false
                  show_icon: true
                  show_entity_picture: true
                  tap_action:
                    action: navigate
                    navigation_path: '#ams-2'
                  state:
                    - value: 1
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-1.svg
                    - value: 2
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-2.svg
                    - value: 3
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-3.svg
                    - value: 4
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-4.svg
                    - value: 5
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-5.svg
                    - value: unavailable
                      icon: mdi:water
                  variables:
                    low_filament_threshold: 25
                    has_secondary_temp_and_hum_sensor: true
                    filament1: |
                      [[[
                        let s = states['sensor.ams_1_3d_printer_tray_0'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                    filament2: |
                      [[[
                        let s = states['sensor.ams_1_3d_printer_tray_1'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                    filament3: |
                      [[[
                        let s = states['sensor.ams_1_3d_printer_tray_2'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                    filament4: |
                      [[[
                        let s = states['sensor.ams_1_3d_printer_tray_3'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                  custom_fields:
                    temp: |
                      [[[
                        let temp = states['sensor.x1c_ams_1_temperature_and_humidity_temperature'];
                        return temp ? Math.round(temp.state) + ' 째C' : '-';
                      ]]]
                    humidity: |
                      [[[
                        let hum = states['sensor.x1c_ams_1_temperature_and_humidity_humidity'];
                        return hum ?  Math.round(hum.state) + '%' : '-';
                      ]]]
                    ams_temp: |
                      [[[
                        let temp = states['sensor.ams_1_3d_printer_temp'];
                        return temp ? Math.round(temp.state) + ' 째C' : '-';
                      ]]]
                    filaments: |
                      [[[
                        return `
                          <div style="display: grid; grid-template-areas: 'f1 f2' 'f3 f4'; background-color: rgba(20,20,20, .3); border-radius: 50%; padding: 7.5px; aspect-ratio: 1/1; gap: 0.25em">
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament1.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament1.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament1.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament1.remain}%; background-color: ${variables.filament1.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament2.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament2.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament2.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament2.remain}%; background-color: ${variables.filament2.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament3.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament3.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament3.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament3.remain}%; background-color: ${variables.filament3.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament4.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament4.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament4.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament4.remain}%; background-color: ${variables.filament4.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                          </div>
                        `;
                      ]]]
                  styles:
                    card:
                      - border-radius: 24px
                      - background-color: rgb(40,40,40)
                      - padding: 10px
                    grid:
                      - grid-template-areas: |
                          [[[
                            if (variables.has_secondary_temp_and_hum_sensor === true) {
                              return `
                                "i temp"
                                "i humidity"
                                "filaments filaments"
                              `;
                            } else {
                              return `
                                "i ams_temp"
                                "i ams_temp"
                                "filaments filaments"
                              `;
                            }
                          ]]]
                      - grid-template-columns: auto
                      - grid-template-rows: auto
                      - gap: 3px
                    name:
                      - justify-self: center
                      - font-size: 12px
                      - color: grey
                      - padding-top: 10px
                    icon:
                      - width: 100%
                    custom_fields:
                      filaments:
                        - width: 125%
                        - justify-self: center
                      humidity:
                        - font-size: 12px
                        - color: grey
                        - align-self: start
                        - justify-self: center
                        - display: |
                            [[[
                              return variables.has_secondary_temp_and_hum_sensor === true ? '' : 'none'
                            ]]]
                      temp:
                        - font-size: 12px
                        - color: grey
                        - align-self: start
                        - justify-self: center
                        - display: |
                            [[[
                              return variables.has_secondary_temp_and_hum_sensor === true ? '' : 'none'
                            ]]]
                      ams_temp:
                        - font-size: 12px
                        - color: grey
                        - justify-self: center
                        - display: |
                            [[[
                              return variables.has_secondary_temp_and_hum_sensor === true ? 'none' : ''
                            ]]]
                  extra_styles: |
                    @keyframes pulse {
                      from {
                        box-shadow: 0 0 0 0 rgba(234, 93, 86, 0.2);
                      }
                      to {
                        box-shadow: 0 0 0 10px rgba(234, 93, 86, 0);
                      }
                    }

















                      
              - type: conditional
                view_layout:
                  grid-area: ams3
                conditions:
                  - condition: state
                    entity: sensor.x1c_3d_printer_ams_count
                    state: '3'
                card:
                  type: custom:button-card
                  show_name: false
                  entity: |
                    [[[
                      return 'sensor.ams_2_3d_printer_humidity_level'
                    ]]]
                  show_state: false
                  show_label: false
                  show_icon: true
                  show_entity_picture: true
                  tap_action:
                    action: navigate
                    navigation_path: '#ams-3'
                  state:
                    - value: 1
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-1.svg
                    - value: 2
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-2.svg
                    - value: 3
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-3.svg
                    - value: 4
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-4.svg
                    - value: 5
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-5.svg
                    - value: unavailable
                      icon: mdi:water
                  variables:
                    low_filament_threshold: 25
                    has_secondary_temp_and_hum_sensor: true
                    filament1: |
                      [[[
                        let s = states['sensor.ams_2_3d_printer_tray_0'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                    filament2: |
                      [[[
                        let s = states['sensor.ams_2_3d_printer_tray_1'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                    filament3: |
                      [[[
                        let s = states['sensor.ams_2_3d_printer_tray_2'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                    filament4: |
                      [[[
                        let s = states['sensor.ams_2_3d_printer_tray_3'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                  custom_fields:
                    temp: |
                      [[[
                        let temp = states['sensor.x1c_ams_2_temperature_and_humidity_temperature'];
                        return temp ? Math.round(temp.state) + ' 째C' : '-';
                      ]]]
                    humidity: |
                      [[[
                        let hum = states['sensor.x1c_ams_2_temperature_and_humidity_humidity'];
                        return hum ?  Math.round(hum.state) + '%' : '-';
                      ]]]
                    ams_temp: |
                      [[[
                        let temp = states['sensor.ams_2_3d_printer_temp'];
                        return temp ? Math.round(temp.state) + ' 째C' : '-';
                      ]]]
                    filaments: |
                      [[[
                        return `
                          <div style="display: grid; grid-template-areas: 'f1 f2' 'f3 f4'; background-color: rgba(20,20,20, .3); border-radius: 50%; padding: 7.5px; aspect-ratio: 1/1; gap: 0.25em">
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament1.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament1.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament1.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament1.remain}%; background-color: ${variables.filament1.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament2.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament2.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament2.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament2.remain}%; background-color: ${variables.filament2.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament3.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament3.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament3.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament3.remain}%; background-color: ${variables.filament3.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament4.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament4.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament4.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament4.remain}%; background-color: ${variables.filament4.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                          </div>
                        `;
                      ]]]
                  styles:
                    card:
                      - border-radius: 24px
                      - background-color: rgb(40,40,40)
                      - padding: 10px
                    grid:
                      - grid-template-areas: |
                          [[[
                            if (variables.has_secondary_temp_and_hum_sensor === true) {
                              return `
                                "i temp"
                                "i humidity"
                                "filaments filaments"
                              `;
                            } else {
                              return `
                                "i ams_temp"
                                "i ams_temp"
                                "filaments filaments"
                              `;
                            }
                          ]]]
                      - grid-template-columns: auto
                      - grid-template-rows: auto
                      - gap: 3px
                    name:
                      - justify-self: center
                      - font-size: 12px
                      - color: grey
                      - padding-top: 10px
                    icon:
                      - width: 100%
                    custom_fields:
                      filaments:
                        - width: 125%
                        - justify-self: center
                      humidity:
                        - font-size: 12px
                        - color: grey
                        - align-self: start
                        - justify-self: center
                        - display: |
                            [[[
                              return variables.has_secondary_temp_and_hum_sensor === true ? '' : 'none'
                            ]]]
                      temp:
                        - font-size: 12px
                        - color: grey
                        - align-self: start
                        - justify-self: center
                        - display: |
                            [[[
                              return variables.has_secondary_temp_and_hum_sensor === true ? '' : 'none'
                            ]]]
                      ams_temp:
                        - font-size: 12px
                        - color: grey
                        - justify-self: center
                        - display: |
                            [[[
                              return variables.has_secondary_temp_and_hum_sensor === true ? 'none' : ''
                            ]]]
                  extra_styles: |
                    @keyframes pulse {
                      from {
                        box-shadow: 0 0 0 0 rgba(234, 93, 86, 0.2);
                      }
                      to {
                        box-shadow: 0 0 0 10px rgba(234, 93, 86, 0);
                      }
                    }
















                      
              - type: conditional
                view_layout:
                  grid-area: ams4
                conditions:
                  - condition: state
                    entity: sensor.x1c_3d_printer_ams_count
                    state: '4'
                card:
                  type: custom:button-card
                  show_name: false
                  entity: |
                    [[[
                      return 'sensor.ams_3_3d_printer_humidity_level'
                    ]]]
                  show_state: false
                  show_label: false
                  show_icon: true
                  show_entity_picture: true
                  tap_action:
                    action: navigate
                    navigation_path: '#ams-4'
                  state:
                    - value: 1
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-1.svg
                    - value: 2
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-2.svg
                    - value: 3
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-3.svg
                    - value: 4
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-4.svg
                    - value: 5
                      entity_picture: /local/media/bambuprinter/humidity-level-dark-5.svg
                    - value: unavailable
                      icon: mdi:water
                  variables:
                    low_filament_threshold: 25
                    has_secondary_temp_and_hum_sensor: true
                    filament1: |
                      [[[
                        let s = states['sensor.ams_3_3d_printer_tray_0'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                    filament2: |
                      [[[
                        let s = states['sensor.ams_3_3d_printer_tray_1'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                    filament3: |
                      [[[
                        let s = states['sensor.ams_3_3d_printer_tray_2'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                    filament4: |
                      [[[
                        let s = states['sensor.ams_3_3d_printer_tray_3'].attributes;
                        
                        return {
                          color: s.color === 'unavailable' || s.color === 'unknown' || typeof s.color === 'undefined' ? '#161616FF' : s.color,
                          remain: s.remain,
                          in_use: s.in_use
                        }
                      ]]]
                  custom_fields:
                    temp: |
                      [[[
                        let temp = states['sensor.x1c_ams_3_temperature_and_humidity_temperature'];
                        return temp ? Math.round(temp.state) + ' 째C' : '-';
                      ]]]
                    humidity: |
                      [[[
                        let hum = states['sensor.x1c_ams_3_temperature_and_humidity_humidity'];
                        return hum ?  Math.round(hum.state) + '%' : '-';
                      ]]]
                    ams_temp: |
                      [[[
                        let temp = states['sensor.ams_3_3d_printer_temp'];
                        return temp ? Math.round(temp.state) + ' 째C' : '-';
                      ]]]
                    filaments: |
                      [[[
                        return `
                          <div style="display: grid; grid-template-areas: 'f1 f2' 'f3 f4'; background-color: rgba(20,20,20, .3); border-radius: 50%; padding: 7.5px; aspect-ratio: 1/1; gap: 0.25em">
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament1.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament1.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament1.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament1.remain}%; background-color: ${variables.filament1.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament2.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament2.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament2.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament2.remain}%; background-color: ${variables.filament2.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament3.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament3.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament3.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament3.remain}%; background-color: ${variables.filament3.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                            <div style="aspect-ratio: 1/1; margin: 1px; width: 90%; background-color: ${variables.filament4.color.slice(0, -2) + '4D'}; border-radius: 50%; position: relative; overflow: hidden; border: ${variables.filament4.in_use === true ? 'solid 1px green' : 'none'}; animation: ${variables.filament4.remain < variables.low_filament_threshold ? 'pulse 2s infinite' : ''};">
                              <div style="position: absolute; top: ${100 - variables.filament4.remain}%; background-color: ${variables.filament4.color}; width: 100%; height: 100%; border-top: 1px solid black;"></div>
                            </div>
                          </div>
                        `;
                      ]]]
                  styles:
                    card:
                      - border-radius: 24px
                      - background-color: rgb(40,40,40)
                      - padding: 10px
                    grid:
                      - grid-template-areas: |
                          [[[
                            if (variables.has_secondary_temp_and_hum_sensor === true) {
                              return `
                                "i temp"
                                "i humidity"
                                "filaments filaments"
                              `;
                            } else {
                              return `
                                "i ams_temp"
                                "i ams_temp"
                                "filaments filaments"
                              `;
                            }
                          ]]]
                      - grid-template-columns: auto
                      - grid-template-rows: auto
                      - gap: 3px
                    name:
                      - justify-self: center
                      - font-size: 12px
                      - color: grey
                      - padding-top: 10px
                    icon:
                      - width: 100%
                    custom_fields:
                      filaments:
                        - width: 125%
                        - justify-self: center
                      humidity:
                        - font-size: 12px
                        - color: grey
                        - align-self: start
                        - justify-self: center
                        - display: |
                            [[[
                              return variables.has_secondary_temp_and_hum_sensor === true ? '' : 'none'
                            ]]]
                      temp:
                        - font-size: 12px
                        - color: grey
                        - align-self: start
                        - justify-self: center
                        - display: |
                            [[[
                              return variables.has_secondary_temp_and_hum_sensor === true ? '' : 'none'
                            ]]]
                      ams_temp:
                        - font-size: 12px
                        - color: grey
                        - justify-self: center
                        - display: |
                            [[[
                              return variables.has_secondary_temp_and_hum_sensor === true ? 'none' : ''
                            ]]]
                  extra_styles: |
                    @keyframes pulse {
                      from {
                        box-shadow: 0 0 0 0 rgba(234, 93, 86, 0.2);
                      }
                      to {
                        box-shadow: 0 0 0 10px rgba(234, 93, 86, 0);
                      }
                    }
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#ams-1'
                show_header: false
                margin_top_desktop: 10vh
                width_desktop: 50vw
                margin_top_mobile: 30vh
              - type: custom:bubble-card
                card_type: separator
                name: AMS 1
                sub_button:
                  - icon: none
                    show_background: false
                    tap_action:
                      action: none
                  - entity: sensor.x1c_ams_0_temperature_and_humidity_temperature
                    show_state: true
                    show_icon: false
                    show_background: false
                    tap_action:
                      action: none
                  - entity: sensor.x1c_ams_0_temperature_and_humidity_humidity
                    show_state: true
                    show_icon: false
                    show_background: false
                    tap_action:
                      action: none
                styles: >
                  .bubble-sub-button-1 {
                    background-image: url('/local/media/bambuprinter/humidity-level-dark-${hass.states['sensor.ams_0_3d_printer_humidity_level'].state}.svg');
                    background-size: cover;
                  }

                  ${subButtonIcon[0].setAttribute("icon",
                  hass.states['sensor.ams_0_3d_printer_humidity_level'].state
                  === 'unavailable' ? 'mdi:water' : 'none')}
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: repeat(4, 1fr)
                  grid-template-rows: auto
                  grid-template-areas: |
                    "slot1 slot2 slot3 slot4"
                cards:
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot1
                    tap_action:
                      action: none
                    variables:
                      tray_attributes: >
                        [[[ return
                        states['sensor.ams_0_3d_printer_tray_0'].attributes ]]]
                      slotnum: 1
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot2
                    tap_action:
                      action: none
                    variables:
                      tray_attributes: >
                        [[[ return
                        states['sensor.ams_0_3d_printer_tray_1'].attributes ]]]
                      slotnum: 2
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot3
                    tap_action:
                      action: none
                    variables:
                      slotnum: 3
                      tray_attributes: >
                        [[[ return states['sensor.ams_0_3d_printer_tray_' +
                        (variables.slotnum - 1)].attributes ]]]
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot4
                    tap_action:
                      action: none
                    variables:
                      tray_attributes: >
                        [[[ return
                        states['sensor.ams_0_3d_printer_tray_3'].attributes ]]]
                      slotnum: 4
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#ams-2'
                show_header: false
                margin_top_desktop: 10vh
                width_desktop: 50vw
                margin_top_mobile: 30vh
              - type: custom:bubble-card
                card_type: separator
                name: AMS 2
                sub_button:
                  - icon: none
                    show_background: false
                    tap_action:
                      action: none
                  - entity: sensor.x1c_ams_1_temperature_and_humidity_temperature
                    show_state: true
                    show_icon: false
                    show_background: false
                    tap_action:
                      action: none
                  - entity: sensor.x1c_ams_1_temperature_and_humidity_humidity
                    show_state: true
                    show_icon: false
                    show_background: false
                    tap_action:
                      action: none
                styles: >
                  .bubble-sub-button-1 {
                    background-image: url('/local/media/bambuprinter/humidity-level-dark-${hass.states['sensor.ams_1_3d_printer_humidity_level'].state}.svg');
                    background-size: cover;
                  }

                  ${subButtonIcon[0].setAttribute("icon",
                  hass.states['sensor.ams_1_3d_printer_humidity_level'].state
                  === 'unavailable' ? 'mdi:water' : 'none')}
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: repeat(4, 1fr)
                  grid-template-rows: auto
                  grid-template-areas: |
                    "slot1 slot2 slot3 slot4"
                cards:
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot1
                    tap_action:
                      action: none
                    variables:
                      tray_attributes: >
                        [[[ return
                        states['sensor.ams_1_3d_printer_tray_0'].attributes ]]]
                      slotnum: 1
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot2
                    tap_action:
                      action: none
                    variables:
                      tray_attributes: >
                        [[[ return
                        states['sensor.ams_1_3d_printer_tray_1'].attributes ]]]
                      slotnum: 2
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot3
                    tap_action:
                      action: none
                    variables:
                      slotnum: 3
                      tray_attributes: >
                        [[[ return states['sensor.ams_1_3d_printer_tray_' +
                        (variables.slotnum - 1)].attributes ]]]
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot4
                    tap_action:
                      action: none
                    variables:
                      tray_attributes: >
                        [[[ return
                        states['sensor.1_3d_printer_tray_3'].attributes ]]]
                      slotnum: 4
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#ams-3'
                show_header: false
                margin_top_desktop: 10vh
                width_desktop: 50vw
                margin_top_mobile: 30vh
              - type: custom:bubble-card
                card_type: separator
                name: AMS 3
                sub_button:
                  - icon: none
                    show_background: false
                    tap_action:
                      action: none
                  - entity: sensor.x1c_ams_2_temperature_and_humidity_temperature
                    show_state: true
                    show_icon: false
                    show_background: false
                    tap_action:
                      action: none
                  - entity: sensor.x1c_ams_2_temperature_and_humidity_humidity
                    show_state: true
                    show_icon: false
                    show_background: false
                    tap_action:
                      action: none
                styles: >
                  .bubble-sub-button-1 {
                    background-image: url('/local/media/bambuprinter/humidity-level-dark-${hass.states['sensor.ams_2_3d_printer_humidity_level'].state}.svg');
                    background-size: cover;
                  }

                  ${subButtonIcon[0].setAttribute("icon",
                  hass.states['sensor.ams_2_3d_printer_humidity_level'].state
                  === 'unavailable' ? 'mdi:water' : 'none')}
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: repeat(4, 1fr)
                  grid-template-rows: auto
                  grid-template-areas: |
                    "slot1 slot2 slot3 slot4"
                cards:
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot1
                    tap_action:
                      action: none
                    variables:
                      tray_attributes: >
                        [[[ return
                        states['sensor.ams_2_3d_printer_tray_0'].attributes ]]]
                      slotnum: 1
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot2
                    tap_action:
                      action: none
                    variables:
                      tray_attributes: >
                        [[[ return
                        states['sensor.ams_2_3d_printer_tray_1'].attributes ]]]
                      slotnum: 2
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot3
                    tap_action:
                      action: none
                    variables:
                      slotnum: 3
                      tray_attributes: >
                        [[[ return states['sensor.ams_2_3d_printer_tray_' +
                        (variables.slotnum - 1)].attributes ]]]
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot4
                    tap_action:
                      action: none
                    variables:
                      tray_attributes: >
                        [[[ return
                        states['sensor.ams_2_3d_printer_tray_3'].attributes ]]]
                      slotnum: 4
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#ams-4'
                show_header: false
                margin_top_desktop: 10vh
                width_desktop: 50vw
                margin_top_mobile: 30vh
              - type: custom:bubble-card
                card_type: separator
                name: AMS 4
                sub_button:
                  - icon: none
                    show_background: false
                    tap_action:
                      action: none
                  - entity: sensor.x1c_ams_3_temperature_and_humidity_temperature
                    show_state: true
                    show_icon: false
                    show_background: false
                    tap_action:
                      action: none
                  - entity: sensor.x1c_ams_3_temperature_and_humidity_humidity
                    show_state: true
                    show_icon: false
                    show_background: false
                    tap_action:
                      action: none
                styles: >
                  .bubble-sub-button-1 {
                    background-image: url('/local/media/bambuprinter/humidity-level-dark-${hass.states['sensor.ams_3_3d_printer_humidity_level'].state}.svg');
                    background-size: cover;
                  }

                  ${subButtonIcon[0].setAttribute("icon",
                  hass.states['sensor.ams_3_3d_printer_humidity_level'].state
                  === 'unavailable' ? 'mdi:water' : 'none')}
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: repeat(4, 1fr)
                  grid-template-rows: auto
                  grid-template-areas: |
                    "slot1 slot2 slot3 slot4"
                cards:
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot1
                    tap_action:
                      action: none
                    variables:
                      tray_attributes: >
                        [[[ return
                        states['sensor.ams_3_3d_printer_tray_0'].attributes ]]]
                      slotnum: 1
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot2
                    tap_action:
                      action: none
                    variables:
                      tray_attributes: >
                        [[[ return
                        states['sensor.ams_3_3d_printer_tray_1'].attributes ]]]
                      slotnum: 2
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot3
                    tap_action:
                      action: none
                    variables:
                      slotnum: 3
                      tray_attributes: >
                        [[[ return states['sensor.ams_3_3d_printer_tray_' +
                        (variables.slotnum - 1)].attributes ]]]
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
                  - type: custom:button-card
                    view_layout:
                      grid-area: slot4
                    tap_action:
                      action: none
                    variables:
                      tray_attributes: >
                        [[[ return
                        states['sensor.ams_3_3d_printer_tray_3'].attributes ]]]
                      slotnum: 4
                    custom_fields:
                      type: |
                        [[[
                          return variables.tray_attributes.type || '?';
                        ]]]
                      sub_type: |
                        [[[
                          return variables.tray_attributes.tray_sub_brands;
                        ]]]
                      bar: |
                        [[[
                          let color = variables.tray_attributes.color
                          let remain = variables.tray_attributes.remain
                          return `
                            <div style="position: relative; background-color: ${color}; width: 100%; height: 100%; top: ${100 - remain}%; border-top: 2px solid black;"></div>
                          `;
                        ]]]
                      value: |
                        [[[
                          if (variables.tray_attributes.remain) {
                            return variables.tray_attributes.remain + ' %';
                          } else {
                            return '';
                          }
                        ]]]
                      slotnum: |
                        [[[
                          return `
                            <ha-icon icon="mdi:numeric-${variables.slotnum}-box"></ha-icon>
                          `;
                        ]]]
                      printing_title: Printing
                      drying_title: Drying
                      temp_title: Temp
                      time_title: Time
                      printing_temps: |
                        [[[
                          if (variables.tray_attributes.nozzle_temp_min) {
                            return `
                              <span>${variables.tray_attributes.nozzle_temp_min} - ${variables.tray_attributes.nozzle_temp_max}</span>
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'Unknown';
                          }
                        ]]]
                      dry_temp: |
                        [[[
                          if (variables.tray_attributes.drying_temp) {
                            return `
                              ${variables.tray_attributes.drying_temp}
                              <span style="font-size: .75em">째C</span>
                            `;
                          } else {
                            return 'N/A';
                          }
                        ]]]
                      dry_time: |
                        [[[
                          if (variables.tray_attributes.drying_time) {
                            return variables.tray_attributes.drying_time + ' h'
                          } else {
                            return 'N/A';
                          }
                        ]]]
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: transparent
                        - font-size: 1rem
                        - border: none
                      grid:
                        - grid-template-areas: |
                            "type type"
                            "sub_type sub_type"
                            "bar bar"
                            "value value"
                            "slotnum slotnum"
                            "printing_title printing_title"
                            "min_print_temp max_print_temp"
                            "printing_temps printing_temps"
                            "drying_title drying_title"
                            "temp_title dry_temp"
                            "time_title dry_time"
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                        - gap: 5px
                      custom_fields:
                        bar:
                          - position: relative
                          - width: 50%
                          - left: 25%
                          - height: 150px
                          - background-color: white
                          - overflow: hidden
                          - border-radius: 24px
                        value:
                          - color: white
                        slotnum:
                          - color: |
                              [[[
                                if (variables.tray_attributes.in_use === true) {
                                  return 'rgb(78, 171, 80)'
                                } else {
                                  return 'grey'
                                }
                              ]]]
                          - width: 25px
                          - position: relative
                          - left: 50%
                          - transform: translateX(-50%)
                        printing_temps:
                          - color: grey
                        dry_temp:
                          - color: grey
                        dry_time:
                          - color: grey
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#printer-info'
                show_header: false
                margin_top_desktop: 10vh
                width_desktop: 50vw
                margin_top_mobile: 30vh
              - type: custom:button-card
                name: General Info
                show_state: false
                show_label: false
                tap_action:
                  action: none
                variables:
                  value_font_color: grey
                custom_fields:
                  printer_serial: |
                    [[[
                      let state = states['sensor.ams_0_3d_printer_printer_serial'].state;
                      return `
                        <div style="text-align: center; font-size: 12px; justify-self: center;">
                          <span style="display: block;">Printer Serial</span>
                          <span style="overflow: show; color: ${variables.value_font_color}">${state === 'unavailable' ? 'Unknown' : state}</span>
                        </div>
                      `;
                    ]]]
                  ams_serial: |
                    [[[
                      let state = states['sensor.ams_0_3d_printer_serial_number'].state;
                      return `
                        <div style="text-align: center; font-size: 12px; justify-self: center;">
                          <span style="display: block;">AMS Serial</span>
                          <span style="display: block; color: ${variables.value_font_color}">${state === 'unavailable' ? 'Unknown' : state}</span>
                        </div>
                      `;
                    ]]]
                  printer_image: |
                    [[[
                      let printer_type = states['sensor.x1c_3d_printer_model'].state;
                      let img_base = '/local/media/bambuprinter'
                      let img_name = 'on_lighton_2';
                      
                      if (printer_type === 'X1' || printer_type === 'X1C') {
                        img_name = 'on_lighton_2'
                      } else if (printer_type === 'X1E') {
                        img_name = 'on_x1e'
                      } else if (printer_type === 'P1S') {
                        img_name = 'on_p1s'
                      } else if (printer_type === 'P1P') {
                        img_name = 'on_p1p'
                      } else if (printer_type === 'A1') {
                        img_name = 'a1_lightoff'
                      } else if (printer_type === 'A1Mini') {
                        img_name = 'a1mini_lightoff'
                      }
                      
                      return `
                        <div style="display: flex; justify-content: flex-end;">
                          <img
                            src="${img_base}/${img_name}.png"
                            style="width: 100px;"
                          />
                        </div>
                      `;
                    ]]]
                  nozzle_type: |
                    [[[
                      const titleCase = (s) => s.replace(/^_*(.)|_+(.)/g, (s, c, d) => c ? c.toUpperCase() : ' ' + d.toUpperCase())
                      let state = states['sensor.x1c_3d_printer_nozzle_type'].state;
                      return `
                        <div style="text-align: center; font-size: 12px; justify-self: center;">
                          <span style="display: block;">Nozzle Type</span>
                          <span style="display: block; color: ${variables.value_font_color}">${state === 'unavailable' ? 'Unknown' : titleCase(state)}</span>
                        </div>
                      `;
                    ]]]
                  nozzle_diameter: |
                    [[[
                      let state = states['sensor.x1c_3d_printer_nozzle_diameter'].state;
                      return `
                        <div style="text-align: center; font-size: 12px; justify-self: center;">
                          <span style="display: block;">Nozzle Diameter</span>
                          <span style="display: block; color: ${variables.value_font_color}">${state === 'unavailable' ? 'Unknown' : state + 'mm'}</span>
                        </div>
                      `;
                    ]]]
                  printer_ip: |
                    [[[
                      let state = states['sensor.x1c_3d_printer_ip_address'].state;
                      return `
                        <div style="text-align: center; font-size: 12px; justify-self: center;">
                          <span style="display: block;">IP Address</span>
                          <span style="display: block; color: ${variables.value_font_color}">${state === 'unavailable' ? 'Unknown' : state}</span>
                        </div>
                      `;
                    ]]]
                  wifi_strength: |
                    [[[
                      let state = states['sensor.x1c_3d_printer_wifi_signal'].state;
                      return `
                        <div style="text-align: center; font-size: 12px; justify-self: center;">
                          <span style="display: block;">WiFi Signal</span>
                          <span style="display: block; color: ${variables.value_font_color}">${state === 'unavailable' ? 'Unknown' : state + 'dBm'}</span>
                        </div>
                      `;
                    ]]]
                  printer_fw_v: |
                    [[[
                      let state = states['sensor.x1c_3d_printer_sw_version'].state;
                      return `
                        <div style="text-align: center; font-size: 12px; justify-self: center;">
                          <span style="display: block;">Printer Firmware</span>
                          <span style="display: block; color: ${variables.value_font_color}">${state === 'unavailable' ? 'Unknown' : state}</span>
                        </div>
                      `;
                    ]]]
                  ams_fw_v: |
                    [[[
                      let state = states['sensor.ams_0_3d_printer_sw_version'].state;
                      return `
                        <div style="text-align: center; font-size: 12px; justify-self: center;">
                          <span style="display: block;">AMS Firmware</span>
                          <span style="display: block; color: ${variables.value_font_color}">${state === 'unavailable' ? 'Unknown' : state}</span>
                        </div>
                      `;
                    ]]]
                  nodered_v: |
                    [[[
                      let state = states['sensor.x1c_3d_printer_nodered_flow_version'].state;
                      return `
                        <div style="text-align: center; font-size: 12px; justify-self: center;">
                          <span style="display: block;">NodeRed Version</span>
                          <span style="display: block; color: ${variables.value_font_color}">${state === 'unavailable' ? 'Unknown' : state}</span>
                        </div>
                      `;
                    ]]]
                styles:
                  card:
                    - background-color: rgb(40,40,40)
                    - padding-left: 10px
                    - padding-right: 10px
                  grid:
                    - grid-template-areas: >
                        "n n n n printer_image"

                        "printer_serial spacer ams_serial spacer2 printer_image"

                        "printer_ip spacer wifi_strength spacer2 printer_image"

                        "nozzle_type spacer nozzle_diameter spacer2
                        printer_image"

                        "printer_fw_v spacer ams_fw_v spacer2 nodered_v"
                    - grid-template-columns: auto 1fr auto 1fr 100px
                    - grid-template-rows: auto
                    - text-align: start
                  name:
                    - justify-self: center
                    - align-self: flex-start
                    - font-size: 2rem
                    - color: grey
                  custom_fields:
                    printer_image:
                      - justify-self: right
                      - width: 150px
                      - height: 150px
              - type: horizontal-stack
                cards:
                  - type: custom:bubble-card
                    card_type: button
                    entity: switch.x1c_3d_printer_toggle_auto_recovery
                    name: Auto Recovery
                    icon: mdi:refresh-auto
                    scrolling_effect: false
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      target:
                        entity_id: switch.x1c_3d_printer_toggle_auto_recovery
                    styles: |
                      .bubble-name {
                        whitespace: normal;
                        word-break: break-word;
                      }

                      .bubble-button-background {
                        background-color: rgb(86, 110, 168);
                      }

                      .bubble-icon {
                        color: rgb(86, 110, 168) !important;
                      }
                  - type: custom:bubble-card
                    card_type: button
                    entity: switch.x1c_3d_printer_toggle_recording
                    show_name: false
                    icon: mdi:record-rec
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      target:
                        entity_id: switch.x1c_3d_printer_toggle_recording
                    sub_button:
                      - entity: select.x1c_3d_printer_camera_resolution
                        show_state: true
                        show_attribute: false
                        show_icon: true
                    styles: |
                      .bubble-button-background {
                        background-color: rgb(86, 110, 168);
                      }

                      .bubble-icon {
                        color: ${hass.states['switch.x1c_3d_printer_toggle_recording'].state === 'on' ? 'red' : 'grey'} !important;
                      }
              - type: horizontal-stack
                cards:
                  - type: custom:bubble-card
                    card_type: button
                    entity: switch.x1c_3d_printer_toggle_buildplate_detection
                    name: Buildplate Detection
                    icon: mdi:qrcode-scan
                    scrolling_effect: false
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      target:
                        entity_id: switch.x1c_3d_printer_toggle_buildplate_detection
                    styles: |
                      .bubble-name {
                        whitespace: normal;
                        word-break: break-word;
                      }

                      .bubble-button-background {
                        background-color: rgb(86, 110, 168);
                      }

                      .bubble-icon {
                        color: rgb(86, 110, 168) !important;
                      }
                  - type: custom:bubble-card
                    card_type: button
                    entity: switch.x1c_3d_printer_toggle_first_layer_inspection
                    name: First Layer Inspection
                    icon: mdi:layers-search
                    scrolling_effect: false
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      target:
                        entity_id: switch.x1c_3d_printer_toggle_first_layer_inspection
                    styles: |
                      .bubble-name {
                        whitespace: normal;
                        word-break: break-word;
                      }

                      .bubble-button-background {
                        background-color: rgb(86, 110, 168);
                      }

                      .bubble-icon {
                        color: rgb(86, 110, 168) !important;
                      }
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.x1c_3d_printer_ams_count
                    above: 0
                card:
                  type: horizontal-stack
                  cards:
                    - type: custom:bubble-card
                      card_type: button
                      entity: switch.x1c_3d_printer_toggle_auto_switch
                      name: Auto Switch Filament
                      icon: mdi:swap-horizontal
                      scrolling_effect: false
                      styles: |
                        .bubble-name {
                          whitespace: normal;
                          word-break: break-word;
                        }

                        .bubble-button-background {
                          background-color: rgb(86, 110, 168);
                        }

                        .bubble-icon {
                          color: rgb(86, 110, 168) !important;
                        }
                    - type: custom:bubble-card
                      card-type: empty-column
          - type: vertical-stack
            cards:
              - type: vertical-stack
                cards:
                  - type: custom:bubble-card
                    card_type: pop-up
                    hash: '#temperature-nozzle'
                    show_header: false
                    margin_top_desktop: 10vh
                    width_desktop: 50vw
                    margin_top_mobile: 60vh
                  - type: custom:bubble-card
                    card_type: separator
                    name: Nozzle Temperature
                  - type: custom:bubble-card
                    card_type: button
                    button_type: slider
                    name: Nozzle
                    entity: number.x1c_3d_printer_set_nozzle_temp
                    show_state: true
                    sub_button:
                      - name: Target
                        icon: mdi:printer-3d-nozzle-heat
                        show_background: false
                        show_name: false
                        show_state: true
                        entity: sensor.x1c_3d_printer_nozzle_temperature
                        tap_action:
                          action: none
                      - name: Decrease
                        icon: mdi:minus
                        show_name: false
                        show_icon: true
                        show_background: false
                        tap_action:
                          action: call-service
                          service: number.set_value
                          service_data:
                            entity_id: number.x1c_3d_printer_set_nozzle_temp
                            value: '[[[ return 220; ]]]'
                      - name: Increase
                        icon: mdi:plus
                        show_name: false
                        show_icon: true
                        show_background: false
                        tap_action:
                          action: call-service
                          service: script.increment_3d_printer_nozzle_temp
                    styles: |
                      .bubble-name, .bubble-state {
                        color: black;
                        font-weight: bold;
                      }
                      .bubble-icon {
                        color: rgba(200, 25, 25, .5) !important;
                      }
                      .bubble-button-card-container {
                        background-color: rgb(75,75,75);
                      }
                      .bubble-range-fill {
                        background: rgba(200, 25, 25, .5) !important;
                      }
                      .bubble-sub-button {
                        color: black;
                      }
                  - type: custom:layout-card
                    layout_type: custom:grid-layout
                    layout:
                      grid-template-columns: 1fr auto 1fr auto 1fr
                      grid-template-rows: auto
                      grid-template-areas: |
                        "spacer1 off spacer2 changing spacer3"
                    cards:
                      - type: custom:button-card
                        view_layout:
                          grid-area: 'off'
                        name: 'Off'
                        show_state: false
                        icon: mdi:printer-3d-nozzle-off
                        tap_action:
                          action: call-service
                          service: number.set_value
                          data:
                            value: '0'
                          target:
                            entity_id: number.x1c_3d_printer_set_nozzle_temp
                        custom_fields:
                          temp: 0
                        styles:
                          card:
                            - border-top-left-radius: 24px
                            - border-bottom-left-radius: 24px
                            - border-top-right-radius: 24px
                            - border-bottom-right-radius: 24px
                            - background-color: rgb(40,40,40)
                            - color: grey
                            - padding: 5px
                            - width: 75px
                          grid:
                            - grid-template-areas: '"i n" "i temp"'
                            - grid-template-columns: auto
                            - grid-template-rows: auto
                          img_cell:
                            - align-self: center
                            - text-align: start
                          name:
                            - justify-self: left
                            - font-size: 12px
                          icon:
                            - width: 20px
                            - color: grey
                          state:
                            - justify-self: center
                            - font-size: 12px
                          custom_fields:
                            temp:
                              - justify-self: left
                              - font-size: 10px
                      - type: custom:button-card
                        view_layout:
                          grid-area: changing
                        name: Changing
                        show_state: false
                        icon: phu:3d-filament
                        tap_action:
                          action: call-service
                          service: number.set_value
                          data:
                            value: '250'
                          target:
                            entity_id: number.x1c_3d_printer_set_nozzle_temp
                        custom_fields:
                          temp: 250
                        styles:
                          card:
                            - border-top-left-radius: 24px
                            - border-bottom-left-radius: 24px
                            - border-top-right-radius: 24px
                            - border-bottom-right-radius: 24px
                            - background-color: rgb(40,40,40)
                            - color: grey
                            - padding: 5px
                            - width: 100px
                          grid:
                            - grid-template-areas: '"i n" "i temp"'
                            - grid-template-columns: auto
                            - grid-template-rows: auto
                          img_cell:
                            - align-self: center
                            - text-align: start
                          name:
                            - justify-self: left
                            - font-size: 12px
                          icon:
                            - width: 20px
                            - color: grey
                          custom_fields:
                            temp:
                              - justify-self: left
                              - font-size: 10px
                  - type: custom:layout-card
                    layout_type: custom:grid-layout
                    layout:
                      grid-template-columns: 1fr auto 1fr auto 1fr auto 1fr
                      grid-template-rows: auto
                      grid-template-areas: |
                        "spacer1 pla spacer2 tpu spacer3 abs spacer4"
                    cards:
                      - type: custom:button-card
                        view_layout:
                          grid-area: pla
                        name: PLA
                        show_state: false
                        icon: mdi:thermometer-low
                        tap_action:
                          action: call-service
                          service: number.set_value
                          data:
                            value: '220'
                          target:
                            entity_id: number.x1c_3d_printer_set_nozzle_temp
                        custom_fields:
                          temp: 220
                        styles:
                          card:
                            - border-top-left-radius: 24px
                            - border-bottom-left-radius: 24px
                            - border-top-right-radius: 24px
                            - border-bottom-right-radius: 24px
                            - background-color: rgb(40,40,40)
                            - color: grey
                            - padding: 5px
                            - width: 100px
                          grid:
                            - grid-template-areas: '"i n" "i temp"'
                            - grid-template-columns: auto
                            - grid-template-rows: auto
                          img_cell:
                            - align-self: center
                            - text-align: start
                          name:
                            - justify-self: left
                            - font-size: 12px
                          icon:
                            - width: 20px
                            - color: grey
                          state:
                            - justify-self: center
                            - font-size: 12px
                          custom_fields:
                            temp:
                              - justify-self: left
                              - font-size: 10px
                      - type: custom:button-card
                        view_layout:
                          grid-area: tpu
                        name: TPU/PETG
                        show_state: false
                        icon: mdi:thermometer
                        tap_action:
                          action: call-service
                          service: number.set_value
                          data:
                            value: '250'
                          target:
                            entity_id: number.x1c_3d_printer_set_nozzle_temp
                        custom_fields:
                          temp: 250
                        styles:
                          card:
                            - border-top-left-radius: 24px
                            - border-bottom-left-radius: 24px
                            - border-top-right-radius: 24px
                            - border-bottom-right-radius: 24px
                            - background-color: rgb(40,40,40)
                            - color: grey
                            - padding: 5px
                            - width: 100px
                          grid:
                            - grid-template-areas: '"i n" "i temp"'
                            - grid-template-columns: auto
                            - grid-template-rows: auto
                          img_cell:
                            - align-self: center
                            - text-align: start
                          name:
                            - justify-self: left
                            - font-size: 12px
                          icon:
                            - width: 20px
                            - color: grey
                          state:
                            - justify-self: center
                            - font-size: 12px
                          custom_fields:
                            temp:
                              - justify-self: left
                              - font-size: 10px
                      - type: custom:button-card
                        view_layout:
                          grid-area: abs
                        name: ABS
                        show_state: false
                        icon: mdi:thermometer-high
                        tap_action:
                          action: call-service
                          service: number.set_value
                          data:
                            value: '275'
                          target:
                            entity_id: number.x1c_3d_printer_set_nozzle_temp
                        custom_fields:
                          temp: 275
                        styles:
                          card:
                            - border-top-left-radius: 24px
                            - border-bottom-left-radius: 24px
                            - border-top-right-radius: 24px
                            - border-bottom-right-radius: 24px
                            - background-color: rgb(40,40,40)
                            - color: grey
                            - padding: 5px
                            - width: 100px
                          grid:
                            - grid-template-areas: '"i n" "i temp"'
                            - grid-template-columns: auto
                            - grid-template-rows: auto
                          img_cell:
                            - align-self: center
                            - text-align: start
                          name:
                            - justify-self: left
                            - font-size: 12px
                          icon:
                            - width: 20px
                            - color: grey
                          state:
                            - justify-self: center
                            - font-size: 12px
                          custom_fields:
                            temp:
                              - justify-self: left
                              - font-size: 10px
              - type: vertical-stack
                cards:
                  - type: custom:bubble-card
                    card_type: pop-up
                    hash: '#temperature-bed'
                    show_header: false
                    margin_top_desktop: 10vh
                    width_desktop: 50vw
                    margin_top_mobile: 70vh
                  - type: custom:bubble-card
                    card_type: separator
                    name: Temperatures
                  - type: custom:bubble-card
                    card_type: button
                    button_type: slider
                    name: Bed
                    entity: number.x1c_3d_printer_set_bed_temp
                    show_state: true
                    sub_button:
                      - name: Target
                        icon: mdi:target
                        show_background: false
                        show_name: false
                        show_state: true
                        entity: sensor.x1c_3d_printer_bed_target_temperature
                        tap_action:
                          action: none
                      - name: Decrease
                        icon: mdi:minus
                        show_name: false
                        show_icon: true
                        show_background: false
                        tap_action:
                          action: call-service
                          service: script.decrement_3d_printer_bed_temp
                      - name: Increase
                        icon: mdi:plus
                        show_name: false
                        show_icon: true
                        show_background: false
                        tap_action:
                          action: call-service
                          service: script.increment_3d_printer_bed_temp
                    styles: |
                      .bubble-name, .bubble-state {
                        color: black;
                        font-weight: bold;
                      }
                      .bubble-button-card-container {
                        background-color: rgb(75,75,75);
                      }
                      .bubble-range-fill {
                        background: rgba(200, 25, 25, .5) !important;
                      }
                      .bubble-sub-button-1 {
                        display: ${hass.states['sensor.x1c_3d_printer_bed_target_temperature'].state !== hass.states['number.x1c_3d_printer_set_bed_temp'].state ? '' : 'none'} !important;
                      }
                      .bubble-sub-button {
                        color: black;
                      }
              - type: vertical-stack
                cards:
                  - type: custom:bubble-card
                    card_type: pop-up
                    hash: '#fans-part'
                    show_header: false
                    margin_top_desktop: 50vh
                    width_desktop: 50vw
                    margin_top_mobile: 70vh
                  - type: custom:bubble-card
                    card_type: button
                    button_type: slider
                    entity: fan.x1c_3d_printer_cooling_fan
                    show_name: true
                    name: Part Cooling Fan
                    show_attribute: true
                    attribute: percentage
                    tap_action:
                      action: call-service
                      service: fan.turn_off
                      target:
                        entity_id: fan.x1c_3d_printer_cooling_fan
                    styles: |
                      .bubble-icon {
                        color: ${hass.states['fan.x1c_3d_printer_cooling_fan'].state === 'on' ? 'rgb(78, 171, 80)' : 'grey'} !important;
                      }
                      .bubble-range-fill {
                        background: rgb(78, 171, 80) !important;
                      }
              - type: vertical-stack
                cards:
                  - type: custom:bubble-card
                    card_type: pop-up
                    hash: '#fans-aux'
                    show_header: false
                    margin_top_desktop: 50vh
                    width_desktop: 50vw
                    margin_top_mobile: 70vh
                  - type: custom:bubble-card
                    card_type: button
                    button_type: slider
                    entity: fan.x1c_3d_printer_big_fan1
                    show_name: true
                    name: Auxiliary Cooling Fan
                    show_attribute: true
                    attribute: percentage
                    tap_action:
                      action: call-service
                      service: fan.turn_off
                      target:
                        entity_id: fan.x1c_3d_printer_big_fan1
                    styles: |
                      .bubble-icon {
                        color: ${hass.states['fan.x1c_3d_printer_big_fan1'].state === 'on' ? 'rgb(78, 171, 80)' : 'grey'} !important;
                      }
                      .bubble-range-fill {
                        background: rgb(78, 171, 80) !important;
                      }
              - type: vertical-stack
                cards:
                  - type: custom:bubble-card
                    card_type: pop-up
                    hash: '#fans-chamber'
                    show_header: false
                    margin_top_desktop: 50vh
                    width_desktop: 50vw
                    margin_top_mobile: 70vh
                  - type: custom:bubble-card
                    card_type: button
                    button_type: slider
                    entity: fan.x1c_3d_printer_big_fan2
                    show_name: true
                    name: Chamber Fan
                    show_attribute: true
                    attribute: percentage
                    tap_action:
                      action: call-service
                      service: fan.turn_off
                      target:
                        entity_id: fan.x1c_3d_printer_big_fan2
                    styles: |
                      .bubble-icon {
                        color: ${hass.states['fan.x1c_3d_printer_big_fan2'].state === 'on' ? 'rgb(78, 171, 80)' : 'grey'} !important;
                      }
                      .bubble-range-fill {
                        background: rgb(78, 171, 80) !important;
                      }
              - type: vertical-stack
                cards:
                  - type: custom:bubble-card
                    card_type: pop-up
                    hash: '#settings-speed'
                    show_header: false
                    margin_top_desktop: 50vh
                    width_desktop: 50vw
                    margin_top_mobile: 70vh
                  - type: custom:bubble-card
                    card_type: separator
                    name: Speed
                    sub_button:
                      - name: Decrease
                        icon: mdi:minus
                        entity: sensor.x1c_3d_printer_speed_percent
                        show_background: false
                        tap_action:
                          action: call-service
                          service: script.decrement_3d_printer_speed
                      - name: Speed %
                        icon: mdi:gauge
                        entity: number.x1c_3d_printer_set_speed_percent
                        show_background: false
                        show_name: false
                        show_state: true
                        show_icon: false
                        tap_action:
                          action: none
                      - name: Increase
                        icon: mdi:plus
                        entity: sensor.x1c_3d_printer_speed_percent
                        show_background: false
                        tap_action:
                          action: call-service
                          service: script.increment_3d_printer_speed
                  - type: horizontal-stack
                    cards:
                      - type: custom:button-card
                        entity: select.x1c_3d_printer_speed
                        name: Silent
                        show_state: false
                        icon: mdi:gauge-empty
                        tap_action:
                          action: navigate
                          navigation_path: '#settings-speed'
                        styles:
                          card:
                            - border-radius: 24px
                            - background-color: |
                                [[[
                                  let state = entity.state;
                                  if (state === 'Silent') {
                                    return 'rgba(255, 220, 200, .6)';
                                  } else {
                                    return 'rgb(40,40,40)'
                                  }
                                ]]]
                          grid:
                            - grid-template-areas: '"i n"'
                            - grid-template-columns: auto auto
                            - grid-template-rows: auto
                          img_cell:
                            - align-self: center
                            - text-align: start
                          name:
                            - justify-self: left
                            - font-size: 12px
                            - color: >-
                                [[[ return entity.state === 'Silent' ? 'white' :
                                'grey' ]]]
                          icon:
                            - width: 24px
                            - opacity: >-
                                [[[ return entity.state === 'Silent' ? '1' :
                                '0.3' ]]]
                          state:
                            - justify-self: center
                            - font-size: 12px
                            - color: grey
                      - type: custom:button-card
                        entity: select.x1c_3d_printer_speed
                        name: Standard
                        show_state: false
                        icon: mdi:gauge-low
                        tap_action:
                          action: navigate
                          navigation_path: '#settings-speed'
                        styles:
                          card:
                            - border-radius: 24px
                            - background-color: |
                                [[[
                                  let state = entity.state;
                                  if (state === 'Standard') {
                                    return 'rgba(255, 220, 200, .6)';
                                  } else {
                                    return 'rgb(40,40,40)'
                                  }
                                ]]]
                          grid:
                            - grid-template-areas: '"i n"'
                            - grid-template-columns: auto auto
                            - grid-template-rows: auto
                          img_cell:
                            - align-self: center
                            - text-align: start
                          name:
                            - justify-self: left
                            - font-size: 12px
                            - color: >-
                                [[[ return entity.state === 'Standard' ? 'white'
                                : 'grey' ]]]
                          icon:
                            - width: 24px
                            - opacity: >-
                                [[[ return entity.state === 'Standard' ? '1' :
                                '0.3' ]]]
                          state:
                            - justify-self: center
                            - font-size: 12px
                            - color: grey
                      - type: custom:button-card
                        entity: select.x1c_3d_printer_speed
                        name: Sport
                        show_state: false
                        icon: mdi:gauge
                        tap_action:
                          action: navigate
                          navigation_path: '#settings-speed'
                        styles:
                          card:
                            - border-radius: 24px
                            - background-color: |
                                [[[
                                  let state = entity.state;
                                  if (state === 'Sport') {
                                    return 'rgba(255, 220, 200, .6)';
                                  } else {
                                    return 'rgb(40,40,40)'
                                  }
                                ]]]
                          grid:
                            - grid-template-areas: '"i n"'
                            - grid-template-columns: auto auto
                            - grid-template-rows: auto
                          img_cell:
                            - align-self: center
                            - text-align: start
                          name:
                            - justify-self: left
                            - font-size: 12px
                            - color: >-
                                [[[ return entity.state === 'Sport' ? 'white' :
                                'grey' ]]]
                          icon:
                            - width: 24px
                            - opacity: >-
                                [[[ return entity.state === 'Sport' ? '1' :
                                '0.3' ]]]
                          state:
                            - justify-self: center
                            - font-size: 12px
                            - color: grey
                      - type: custom:button-card
                        entity: select.x1c_3d_printer_speed
                        name: Ludicrous
                        show_state: false
                        icon: mdi:gauge-full
                        tap_action:
                          action: navigate
                          navigation_path: '#settings-speed'
                        styles:
                          card:
                            - border-radius: 24px
                            - background-color: |
                                [[[
                                  let state = entity.state;
                                  if (state === 'Ludicrous') {
                                    return 'rgba(255, 220, 200, .6)';
                                  } else {
                                    return 'rgb(40,40,40)'
                                  }
                                ]]]
                          grid:
                            - grid-template-areas: '"i n"'
                            - grid-template-columns: auto auto
                            - grid-template-rows: auto
                          img_cell:
                            - align-self: center
                            - text-align: start
                          name:
                            - justify-self: left
                            - font-size: 12px
                            - color: >-
                                [[[ return entity.state === 'Ludicrous' ?
                                'white' : 'grey' ]]]
                          icon:
                            - width: 24px
                            - opacity: >-
                                [[[ return entity.state === 'Ludicrous' ? '1' :
                                '0.3' ]]]
                          state:
                            - justify-self: center
                            - font-size: 12px
                            - color: grey